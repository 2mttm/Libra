name: Java Maven Build and Docker Image

on:
  push:
    paths:
      - 'src/**'
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'

jobs:
  build_maven:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Build with Maven
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: mvn package -Pproduction

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: libra
          path: target/libra.jar
          retention-days: 1

  build_docker:
    needs: build_maven
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: libra

      - name: Display Directory Structure
        run: |
          tree -L 2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: 2mttm
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: 2mttm/libra:latest

  deploy:
    needs: build_docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        id: deploy_render
        uses: JorgeLNJunior/render-deploy@v1.4.3
        with:
          service_id: ${{ secrets.MY_RENDER_SERVICE_ID }}
          api_key: ${{ secrets.MY_RENDER_API_KEY }}
          wait_deploy: false
